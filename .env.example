# ACP Integration Configuration
# Copy this file to .env and fill in your values

# ========================================
# REQUIRED: Core Agent Configuration
# ========================================

# Private key for the whitelisted wallet (must be registered on Virtuals)
# No ETH needed - Virtuals Protocol handles all gas fees automatically!
WHITELISTED_WALLET_PRIVATE_KEY=0xyour_private_key_here

# Entity ID for the whitelisted wallet (obtained when registering your agent)
# This is a critical identifier that links your wallet to your agent registration
WHITELISTED_WALLET_ENTITY_ID=1

# Your agent's wallet address (receives payments for services)
AGENT_WALLET_ADDRESS=0xYourAgentWalletAddress

# Seller agent wallet address (for Quick Deploy service)
# This is the wallet that buyers will send payments to
SELLER_AGENT_WALLET_ADDRESS=0xYourSellerAgentWalletAddress

# ========================================
# REQUIRED: Service Configuration
# ========================================

# Your service name (displayed to users)
SERVICE_NAME="Launch a trading agent"

# Your service description
SERVICE_DESCRIPTION="Launch your own personal trading agent in seconds"

# Your API endpoint that provides the service
# This is where your agent's functionality is hosted
API_ENDPOINT=https://your-api-endpoint.com

# API authentication (if required)
API_KEY=your_api_key_if_needed

# Optional: OpenAI API key (not required for direct ACP integration)
# Only needed if you add custom AI features to your agent
# OPENAI_API_KEY=your_openai_api_key_here

# ========================================
# OPTIONAL: Advanced Configuration
# ========================================

# ACP Configuration
ACP_RPC_URL=https://base.llamarpc.com
ACP_CHAIN_ID=8453
ACP_CONTRACT_ADDRESS=0xC6e864B52203da6593C83fD18E4c1212D088F61F

# Service Pricing (in USDC for Quick Deploy)
SERVICE_PRICE=50

# Performance Settings
ACP_PROCESSING_DELAY=3000  # Delay between job processing (ms)
ACP_MAX_RETRIES=3          # Max retry attempts for failed transactions
GAS_PRICE_MULTIPLIER=1.1   # Gas price increase multiplier for retries
MAX_GAS_PRICE=100          # Maximum gas price in gwei
TX_CONFIRMATION_TIMEOUT=60000  # Transaction confirmation timeout (ms)

# Service Level Agreement (SLA)
JOB_EXPIRATION_HOURS=24    # Hours before jobs expire (triggers refund)
ENABLE_JOB_EXPIRATION=true # Enable automatic job expiration

# Environment & Graduation
ENVIRONMENT=sandbox        # 'sandbox' or 'production'
NETWORK=base              # 'base' for mainnet, 'sepolia' for testnet
SANDBOX_TRANSACTION_COUNT=0  # Track successful sandbox transactions

# Logging
LOG_LEVEL=info             # debug, info, warn, error
LOG_API_OUTPUT=false       # Log API responses (set true for debugging)
ENABLE_TX_MONITORING=true  # Enable transaction monitoring

# Mock Testing
ENABLE_MOCK_BUYER=false    # Enable mock buyer for testing
MOCK_BUYER_INTERVAL=30000  # Mock buyer request interval (ms)

# State Management
KEEP_COMPLETED_JOBS=5      # Number of completed jobs to keep in memory
KEEP_CANCELLED_JOBS=5      # Number of cancelled jobs to keep in memory
IGNORED_JOB_IDS=           # Comma-separated list of job IDs to ignore

# ========================================
# ACP BEST PRACTICES NOTES
# ========================================
#
# 1. Start with sandbox environment and low service price ($0.01)
# 2. Complete 10 successful sandbox transactions for graduation
# 3. Keep service description clear and specific to prevent scope creep
# 4. Set appropriate job expiration time based on your service complexity
# 5. Monitor SLA compliance - expired jobs trigger automatic refunds
# 6. Only process requests that match your service capabilities


# ========================================
# QUICK DEPLOY CONFIGURATION
# ========================================

# Kosher Capital API Configuration
SHEKEL_API_KEY=your_shekel_api_key_here
KOSHER_CAPITAL_API_URL=https://app.kosher.capital/api

# Blockchain Configuration (Base Network)
USDC_CONTRACT_ADDRESS=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913
FACTORY_CONTRACT_ADDRESS=your_factory_contract_address
PAYMENT_RECIPIENT_ADDRESS=0xYourPaymentRecipientAddress

